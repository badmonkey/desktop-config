#!/bin/bash

APP=$(basename "${0}")
MODE=
WAIT="-n"
ALLOWEMPTY=
QUERY=
SELECT=


if [ ! -e "/run/user/${UID}/emacs/server" ]; then
    echo "Starting server"

    emacs & disown

    echo "Waiting for server..."
    emacsclient -e 't' 2>/dev/null
    while [ $? -ne 0 ]; do
        sleep 5
        echo "Waiting for server..."
        emacsclient -e 't' 2>/dev/null
    done
    echo "Server ready"
fi



function setup_mode () {
    if [ -z "$MODE" ] && [ "${1}" != "edit" ]; then
        EXT="${1##*.}"
        if [ "$EXT" != "${1}" ]; then
            MODE="$EXT"
        elif [ "${1:(-4)}" == "edit" ]; then
            MODE="${1:0:-4}"
        fi
        echo "$MODE" > ~/.edit-mode
        echo "Editing '$MODE' files"
    fi
}

function update_mode () {
    MODE="$1"
    echo "$MODE" > ~/.edit-mode
    echo "Working with '$MODE' files"
}

function assert_have_mode () {
    if [ -z "$MODE" ]; then
        if [ -e ~/.edit-mode ]; then
            MODE=$(cat ~/.edit-mode)
            echo "Working with '$MODE' files"
        else
            echo "No mode set, use --XXX to work with extension XXX"
            exit
        fi
    fi
}

function batch_open () {
    xargs -r -n 8 -0 emacsclient -nq
}

function find_files () {
    fzf-tmux -m --border --margin=5,0 --query "$1" --print0
}

function select_files () {
    fzf-tmux -m --border --margin=5,0 --print0
}

function search_files () {
    ack --type-set "SEARCH=.$MODE" --type=SEARCH -l "$QUERY" "$1"
}

EDITING=

while [ -n "$1" ]; do
    ARG="$1"

    case $ARG in
        --help)
            echo "edit --XXX|-XXX -s -n -w -z -f srch FILE|DIR..."
            echo "  --XXX|-XXX  set the file suffix to match"
            echo "  -s set SELECT does nothing atm"
            echo "  -n  Don't wait for editor to finish opening files"
            echo "  -w  Wait until editor has finished opening files"
            echo "  -z  if FILE|DIR result in no files select ask for file to open"
            echo "  -f srch  set search term for selcting files in a DIR"
            echo "FILE  if file exists, open in editor, set mode based on file"
            echo "      otherwise tell the editor to open an empty buffer (dont set mode)"
            echo "DIR"
            ;;

        --*)
            update_mode "${ARG:2}"
            ;;

        -s)
            SELECT="y"
            ;;

        -n)
            WAIT="-n"
            ;;

        -w)
            WAIT=""
            ;;

        -z)
            ALLOWEMPTY="y"
            ;;

        -f)
            shift
            if [ -n "$1" ]; then
                QUERY="$1"
                echo "Searching for term '$QUERY' ..."
            else
                echo "Missing search term"
                exit
            fi
            ;;

        -*)
            update_mode "${ARG:1}"
            ;;

        *)
            if [ -f "$ARG" ]; then
                setup_mode "$(basename $ARG)"
                echo "Edit $ARG ..."
                emacsclient "$WAIT" -q "$ARG"
                EDITING="$ARG"
            elif [ -d "$ARG" ]; then
                assert_have_mode
                if [ -z "$QUERY" ]; then
                    echo "Edit files from $ARG/*.$MODE"
                    if [ -z "$ALLOWEMPTY" ] ; then
                        find "$ARG" -type f \! -empty -iname "*.${MODE}" -print0 | batch_open
                    else
                        find "$ARG" -type f -iname "*.${MODE}" -print0 | batch_open
                    fi
                    EDITING="*.$MODE"
                else
                    search_files "$ARG" | select_files | batch_open
                    EDITING="*.$MODE"
                fi
            elif ! [ -e "$ARG" ]; then
                # check if we have a glob that doesn't match anything
                case "$ARG" in
                    *\**)
                        echo "No files matching $ARG  skipping"
                        ;;
                    *\?*)
                        echo "No files matching $ARG  skipping"
                        ;;
                    *)
                        echo "Creating $ARG ..."
                        emacsclient "$WAIT" -q "$ARG"
                        EDITING="$ARG"
                        ;;
                esac
            else
                echo "Not sure what to do with $ARG ... skipping"
            fi
            ;;
    esac

    shift
done


if [ -z "${EDITING}" ]; then
    find_files "$MODE" | batch_open
fi
